@using Microsoft.AspNetCore.Identity;
@using logic.systems.school.managment.Dto;
@model logic.systems.school.managment.Dto.EditStudantDTO
@inject SignInManager<IdentityUser> signInManager
@inject UserManager<IdentityUser> userManager

@{
    ViewData["Title"] = "Actualizar estudante";
    Layout = "~/Views/Shared/_adminLayout.cshtml";
    var user = await userManager.GetUserAsync(User);
}



<link rel="stylesheet" href="~/css/EditViewBen.css" />

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a asp-action="index" asp-controller="home">Dashboard</a></li>
        <li class="breadcrumb-item"><a asp-action="index" asp-controller="studant">Lista de Estudantess</a><</li>
        <li class="breadcrumb-item active" aria-current="page">Detalhes</li>
    </ol>
</nav>

<div class="col-lg-12 grid-margin stretch-card">
    <div class="card">
        <div class="card-body pb-0 pt-2">
            <h2>Estudante</h2>

        </div>
    </div>
</div>




<div class="col-lg-12 grid-margin stretch-card">
    <div class="card">
        <div class="card-body ">

            @if (ViewData.ModelState.IsValid)
            {

            }
            else
            {
                <div id="validation-summary" class="alert alert-danger" role="alert">
                    <p><strong>Por favor, corrija os seguintes erros:</strong></p>
                </div>
            }

            @if (Model.Suspended)
            {
                <div id="validation-summary" class="alert alert-danger" role="alert">
                    <p><strong>Estudante suspenso devido a multas:</strong></p>
                </div>
            }
            else if (Model.Transferred)
            {
                <div id="validation-summary" class="alert alert-warning" role="alert">
                    <p><strong>Estudante Transferido:</strong></p>
                </div>
            }
            else
            {
                <div id="validation-summary" class="alert alert-success" role="alert">
                    <p><strong>Estudante resolvido:</strong></p>
                </div>
            }

            <div class="alert alert-success" role="alert" id="msg-summary" style="display: @(string.IsNullOrEmpty(ViewBag.Mensagem) ? "none" : "block")">
                <p><strong>@ViewBag.Mensagem</strong></p>
            </div>


            <div class="row">
                <div class="col-md-6 col col-sm-12">
                    <fieldset class="p-2">
                        <legend class="w-auto">Dados do estudante</legend>
                        <div class="table-responsive">
                            <table class="Mytable w-75">
                                <tr>
                                    <td>Nome completo:</td>
                                    <td> <a asp-action="EditStudant" asp-controller="studant" asp-route-id="@Model.id">@Model.Name</a>
                                </tr>
                                <tr>
                                    <td>Data de Nasciento:</td>
                                    <td>@Model.BirthDate.ToShortDateString()</td>
                                </tr>
                                <tr>
                                    <td>Idade:</td>
                                    <td>@Model.age</td>
                                </tr>
                                <tr>
                                    <td>Naturalidade:</td>
                                    <td>@Model.Naturalness</td>
                                </tr>

                                <tr>
                                    <td>Província / Distrito:</td>
                                    <td>  @ViewBag.Province / @ViewBag.District  </td>
                                </tr>
                                <tr>
                                    <td>Sexo:</td>
                                    <td>@Model.Gender  </td>
                                </tr>
                                <tr>
                                    <td>BI:</td>
                                    <td>@Model.PersonId  </td>
                                </tr>
                                <tr>
                                    <td>Nome do pai:</td>
                                    <td>@Model.FatherName  </td>
                                </tr>
                                <tr>
                                    <td>Nome da mãe:</td>
                                    <td>@Model.MatherName  </td>
                                </tr>
                                <tr>
                                    <td>Classe actual:</td>
                                    <td>@ViewBag.CurrentSchoolLevel </td>
                                </tr>
                                <tr>
                                    <td>Turma :</td>
                                    <td>@ViewBag.SchoolClassRoom </td>
                                </tr>
                                <tr>
                                    <td>Desconto :</td>
                                    <td>@Model.DiscountType </td>
                                </tr>

                            </table>
                        </div>
                    </fieldset>
                </div>
                <div class="col-md-6 col col-sm-12">
                    <fieldset class="p-2">
                        <legend class="w-auto">Dados do encarregado de educação</legend>
                        <div class="table-responsive">
                            <table class="Mytable w-75">
                                <tr>
                                    <td>Dados do encarregado de educação:</td>
                                    <td>@Model.SponsorName</td>
                                </tr>
                                <tr>
                                    <td>Residência do encarregado de educação:</td>
                                    <td>@Model.SponsorAddress</td>
                                </tr>
                                <tr>
                                    <td>Contacto do encarregado de educação:</td>
                                    <td>@Model.SponsorContacts[0]</td>
                                </tr>






                            </table>
                        </div>
                    </fieldset>

                </div>
            </div>



            <!-- Nav tabs -->
            <ul class="nav nav-tabs" role="tablist">
                <li class="nav-item">
                    <a class="nav-link active   nav-info" data-toggle="tab" href="#home">Mensalidades/Pagamentos</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" data-toggle="tab" href="#menu1" onclick="getTuitionFines(@Model.id)">Multas</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" data-toggle="tab" href="#menu2" onclick="getEnrollments(@Model.id)">Matriculas</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" data-toggle="tab" href="#menu3" onclick="getProducts(@Model.id)">Material Escolar</a>
                </li>
            </ul>

            <!-- Tab panes -->
            <div class="tab-content">
                <div id="home" class=" tab-pane active">

                    <div id="menu_1_spinner">
                        <div class="d-flex justify-content-center">
                            <div class="spinner-border" role="status">
                                <span class="sr-only">Loading...</span>
                            </div>
                        </div>
                    </div>




                    <div id="menu_1_info">


                        <ul class="nav nav-tabs" role="tablist">

                            @foreach (var item in Model.Enrollments)
                            {
                                var styleActive = "nav-link";
                                if (Model.Enrollments[0].Id == item.Id)
                                {
                                    styleActive = "nav-link active nav-info";
                                }
                                var href = $"tuitionHome{item.Id}";
                                <li class="nav-item">
                                    <a class="@styleActive" data-toggle="tab" href="#@href" onclick="GetDataByEnrollmentYear(@item.EnrollmentYear)">@item.EnrollmentYear</a>
                                </li>
                            }
                        </ul>
                        <div class="tab-content">
                            @foreach (var item in Model.Enrollments)
                            {
                                var styleActive = "tab-pane fade";
                                if (Model.Enrollments[0].Id == item.Id)
                                {
                                    styleActive = "tab-pane active";
                                }
                                var divId = $"tuitionHome{item.Id}";
                                <div id="@divId" class="@styleActive">
                                    @{
                                        if (!Model.Transferred)
                                        {
                                                <a class="btn btn-sm btn-success btn-icon-text text-white" data-toggle="modal" data-target="#meuModal" onclick="form_pay_btns()">
                                                    Adicionar Pagamento de mensalidade
                                                </a>

                                                <a class="btn btn-sm btn-success btn-icon-text text-white" data-toggle="modal" data-target="#multipayments" onclick="form_multi_pay_btns()">
                                                    Adicionar Multiplus Pagamentos de mensalidade
                                                </a>
                                        }
                                    }


                                    <br>



                                    <div class="row">

                                        <div class="col-md-7 col-sm-12">
                                            <div class="table-responsive">
                                                <table class="MytabelaItens wideTable" id="tabelaItensPayments" border="1">
                                                    <thead>
                                                        <tr>
                                                            <th>Mensalidade</th>
                                                            <th>Data de Pagamento</th>
                                                            <th>Propina</th>
                                                            <th>Iva (5%)</th>
                                                            <th>Total (+ Iva 5%)</th>
                                                            <th>Recibo</th>
                                                            <!-- Adicione mais colunas conforme necessário -->
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        <!-- Os itens da lista serão adicionados aqui -->
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                        <div class="col-md-5 col-sm-12">
                                            <div class="table-responsive">
                                                <table class="MytabelaItens" id="tabelaItens" border="1">
                                                    <thead>
                                                        <tr>
                                                            <th>Mensalidades a pagar (@ViewBag.CurrentSchoolLevel)</th>
                                                            <th>Data</th>
                                                            <th>Estado</th>
                                                            <!-- Adicione mais colunas conforme necessário -->
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        <!-- Os itens da lista serão adicionados aqui -->
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>

                                </div>
                            }
                        </div>







                    </div>

                </div>
                <div id="menu1" class="tab-pane fade">

                    <div id="menu_2_spinner">
                        <div class="d-flex justify-content-center">
                            <div class="spinner-border" role="status">
                                <span class="sr-only">Loading...</span>
                            </div>
                        </div>
                    </div>

                    <div id="menu_2_info">
                        @*     <a class="btn btn-sm btn-success btn-icon-text text-white" data-toggle="modal" data-target="#meuFeeModal" onclick="form_payfee_btns()">
                        Adicionar Pagamento de multas
                        </a> *@
                        <div class="row">
                            <div class="col-md-12 col-sm-12">
                                <div class="table-responsive">
                                    <table class="MytabelaItens" id="tabelaItenFines" border="1">
                                        <thead>
                                            <tr>
                                                <th>Valor da Multa</th>
                                                <th>Multa referente a mensalidade de</th>
                                                <th>Data de cração da multa (Automática)</th>
                                                <th>Estado</th>
                                                <th>Data de pagamento</th>
                                                <!-- Adicione mais colunas conforme necessário -->
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <!-- Os itens da lista serão adicionados aqui -->
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>


                </div>
                <div id="menu2" class="tab-pane fade">

                    <div id="menu_3_spinner">
                        <div class="d-flex justify-content-center">
                            <div class="spinner-border" role="status">
                                <span class="sr-only">Loading...</span>
                            </div>
                        </div>
                    </div>

                    <div id="menu_3_info">

                        @{

                            if (Model.Transferred)
                            {



                            }
                            else
                            if (!Model.Transferred && Model.Suspended)
                            {
                                    <a class="btn btn-sm btn-success btn-icon-text text-white" data-toggle="modal" data-target="#SuspendedModal">
                                        Matricular
                                    </a>

                                    <a class="ml-3  btn btn-sm btn-danger btn-icon-text text-white" data-toggle="modal" data-target="#SuspendedModal">
                                        Matrícular como repetente
                                    </a>


                                if (user is not null)
                                {
                                    if (user.Email == "admin@pandaalegria.com")
                                    {
                                            <a class="ml-3  btn btn-sm btn-dark btn-icon-text text-white" data-toggle="modal" data-target="#SuspendedModal">
                                                Retificar Matricula
                                            </a>
                                    }

                                }
                            }
                            else if (!Model.Transferred && !Model.Suspended)
                            {
                                    <a class="btn btn-sm btn-success btn-icon-text text-white" data-toggle="modal" data-target="#EnrollmentModal" onclick="form_Enrollment_btns()">
                                        Matricular
                                    </a>

                                    <a class="ml-3  btn btn-sm btn-danger btn-icon-text text-white" data-toggle="modal" data-target="#EnrollmentRepitModal" onclick="form_EnrollmentRepit_btns()">
                                        Matrícular como repetente
                                    </a>


                                if (user is not null)
                                {
                                    if (user.Email == "admin@pandaalegria.com")
                                    {
                                            <a class="ml-3  btn btn-sm btn-dark btn-icon-text text-white" data-toggle="modal" data-target="#FixEnrollmentRepitModal" onclick="form_FixEnrollmentRepit_btns()">
                                                Retificar Matricula
                                            </a>
                                    }

                                }


                            }

                        }





                        <div class="row">
                            <div class="col-md-12 col-sm-12">
                                <div class="table-responsive">
                                    <table class="MytabelaItens" id="tabelaEnrollments" border="1">
                                        <thead>
                                            <tr>
                                                <th>Data de cração</th>
                                                <th>Classe da matricula</th>
                                                <th>Ano</th>
                                                <th>Itens </th>
                                                <th>Valor da matricula </th>
                                                <th><b>Total:</b> (Valor da matricula + itens)</th>
                                                <th>Recibo</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <!-- Os itens da lista serão adicionados aqui -->
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="menu3" class="tab-pane fade">


                    <div id="menu_3_info">

                        @{

                            if (Model.Transferred)
                            {



                            }
                            else
                            if (!Model.Transferred && Model.Suspended)
                            {

                                    <a class="btn btn-sm btn-danger btn-icon-text text-white" data-toggle="modal" data-target="#SuspendedModal">
                                        Vender Material escolar
                                    </a>
                            }
                            else if (!Model.Transferred && !Model.Suspended)
                            {
                                 
                                    <a class="   btn btn-sm btn-success btn-icon-text text-white" data-toggle="modal" data-target="#MaterialModal">
                                        Vender Material escolar
                                    </a>

                            }

                        }





                        <div class="row">
                            <div class="col-md-12 col-sm-12">
                                <div class="table-responsive">
                                    <table class="MytabelaItens" id="ProductsTables" border="1">
                                        <thead>
                                            <tr>
                                                <th>#Recibo</th>
                                                <th>#Data</th>
                                                <th>Descrição</th>
                                                <th>Valor</th>
                                                <th>Ações</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <!-- Os itens da lista serão adicionados aqui -->
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>


            <fieldset class="border pt-0 mb-0">
                <legend class="w-auto mb-0">Ações</legend>
                <div class="template-demo my-0">

                    <a asp-action="index" asp-controller="studant" class="btn btn-sm btn-light btn-icon-text">
                        Voltar para lista
                    </a>
                    @{

                        if (!Model.Transferred)
                        {
                                <button class="btn btn-sm btn-warning btn-icon-text text-white" data-toggle="modal" data-target="#TransferModal" onclick="form_pay_btns()">
                                    Transferir studante
                                </button>
                        }





                            <a class="btn btn-sm btn-danger btn-icon-text text-white" data-toggle="modal" data-target="#DeleteStudent" onclick="form_FixEnrollmentRepit_btns()">
                                Apagar estudante
                            </a>

                    }

                </div>
            </fieldset>
        </div>

    </div>
</div>



<div class="card">
    <div class="card-body ">
        <div class="row justify-content-end">
            <div class="col-12 text-right">
                <!-- Conteúdo da sua div aqui -->
                <fieldset class="p-2">
                    <legend class="w-auto">Dados de Auditoria</legend>
                    <ul class="list-unstyled  ">


                        @{
                            if (Model.CreatedUSer is not null && !string.IsNullOrEmpty(Model.CreatedUSer))
                            {
                                    <li><strong>Criado por:</strong> @Model.CreatedUSer</li>
                                    <li><strong>Data de Criação:</strong> @Model.CreatedDate.Value.ToString("dd-MM-yyyy HH:mm:ss")</li>

                            }

                            if (Model.UpdatedUSer is not null && !string.IsNullOrEmpty(Model.UpdatedUSer))
                            {
                                    <li><strong>Actulizado por:</strong> @Model.UpdatedUSer</li>
                                    <li><strong>Data de Actulização:</strong> @Model.UpdatedDate.Value.ToString("dd-MM-yyyy HH:mm:ss")</li>

                            }
                        }




                    </ul>
                </fieldset>


            </div>
        </div>
    </div>
</div>





<div class="modal fade" id="multipayments" tabindex="-1" role="dialog" aria-labelledby="confirmacaoModalLabel" aria-hidden="true">
    <div class="modal-dialog " role="document" style="width: 50%;">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmacaoModalLabel">Mensalidades a pagar</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Fechar">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">



                <label id="TotalPayAllTabelaIten">Total a pagar:</label>


                <div class="form-row mb-3">

                    <label for="SinglePaymentDate">Data de Pagamento</label>
                    <input type="date" class="form-control date-input" id="MultiPaymentDate">

                </div>
                <div class="form-row mb-3">
                    <div class="table-responsive mt-0">
                        <table class="MytabelaItens mt-0" id="PayAllTabelaIten" border="1">
                            <thead>
                                <tr>
                                    <th>Mensalidades a pagar </th>
                                    <th>Data</th>
                                    <th> </th>

                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>
                    </div>
                </div>

            </div>
            <div class="modal-footer">

                <div id="btn_multipayments">
                    <button type="button" class="btn btn-light" data-dismiss="modal">Cancelar</button>
                    <button type="button" class="btn btn-success text-white" onclick="confirmarMultiPayment()">Efectuar pagamento</button>
                </div>
                <div id="spinner_multipayments" style="display:none">
                    <div class="d-flex justify-content-center">
                        <div class="spinner-border" role="status">
                            <span class="sr-only">Loading...</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



<div class="modal fade" id="TransferModal" tabindex="-1" role="dialog" aria-labelledby="confirmacaoModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmacaoModalLabel">Confirmação de Transferência de Estudante</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Fechar">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Tem certeza de que deseja proceder com a transferência do estudante?</p>
            </div>
            <div class="modal-footer">
                <!-- Botões para confirmar ou cancelar a transferência -->
                <button type="button" class="btn btn-light" data-dismiss="modal">Cancelar</button>

                <form asp-action="Transfer" asp-controller="studant" asp-route-Id="@Model.id">
                    <button type="submit" class="btn btn-warning text-white" onclick="confirmarTransferencia()">Confirmar Transferência</button>
                </form>

            </div>
        </div>
    </div>
</div>




<!-- Seu modal -->
<div class="modal fade" id="meuModal">
    <div class="modal-dialog">
        <div class="modal-content">

            <!-- Conteúdo do modal -->
            <div class="modal-header">
                <h4 class="modal-title">Formulário de pagamento de mensalidades</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>

            <div class="modal-body">
                <!-- Conteúdo do formulário aqui -->
                <form id="meuFormulario">
                    <fieldset class="border p-2">
                        <legend class="w-auto">Mensalidades a pagar (@ViewBag.CurrentSchoolLevel) </legend>
                        <div class="form-row mb-3">
                            <div class="col-md-12 col-sm-12">
                                <label for="SinglePaymentDate">Data de Pagamento</label>
                                <input type="date" class="form-control date-input" id="SinglePaymentDate">
                            </div>
                        </div>
                        <div class="form-row mb-3">
                            <div class="col-md-12 col-sm-12">
                                <label for="">Meses</label>
                                <select class="form-control form-control-lg pb-3 pt-3" id="tuitionPayment">

                                    @foreach (Tuition item in ViewBag.Tuitions)
                                    {
                                        <option value="@item.Id">@item.MonthNumber - @item.MonthName - @item.Year</option>
                                    }

                                </select>
                            </div>
                        </div>
                    </fieldset>
                    <fieldset class="border p-2">
                        <legend class="w-auto">Ações</legend>
                        <div class="template-demo" id="form_pay_btns">
                            <button type="button" class="btn btn-success btn-icon-text" onclick="createPayment()">
                                Efectuar pagamento
                            </button>
                        </div>
                        <div id="form_pay_spinner">
                            <div class="d-flex justify-content-center">
                                <div class="spinner-border" role="status">
                                    <span class="sr-only">Loading...</span>
                                </div>
                            </div>
                        </div>
                    </fieldset>
                </form>
            </div>

        </div>
    </div>
</div>


<!-- Seu modal -->
<div class="modal fade" id="EnrollmentModal">
    <div class="modal-dialog">
        <div class="modal-content">

            <!-- Conteúdo do modal -->
            <div class="modal-header">
                <h4 class="modal-title">Formulário de matricula  </h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>

            <div class="modal-body">
                <!-- Conteúdo do formulário aqui -->
                <form id="meuFormulario">
                    <fieldset class="border p-2">
                        <legend class="w-auto">Dados pedagógicos </legend>
                        <div id="validation-summary-enroll" class="alert alert-danger" role="alert" style="display:none">
                            <p><strong id="validation-summary-msg"> </strong></p>
                        </div>
                        <fieldset class="border p-2">
                            <legend class="w-auto">Matricula actual (@ViewBag.CurrentSchoolLevel) </legend>
                            <div class="form-row mb-3">
                                <div class="col-md-12 col-sm-12">
                                    <label for="">Matricular na Classe</label>
                                    <select class="form-control form-control-lg pb-3 pt-3" asp-for="CurrentSchoolLevelId" id="NextSchoolLevelId">

                                        @foreach (SimpleEntity item in ViewBag.CurrentSchoolLevels)
                                        {
                                            <option value="@item.Id">@item.Description</option>
                                        }
                                    </select>
                                    <span asp-validation-for="CurrentSchoolLevelId" class="text-danger"></span>
                                </div>
                                <div class="col-md-12 col-sm-12 mt-3">
                                    <label for="">Turma / Grupo</label>
                                    <select class="form-control form-control-lg pb-3 pt-3" asp-for="SchoolClassRoomId" id="SchoolClassRoomId">
                                        <option selected>...</option>
                                        @foreach (SimpleEntity item in ViewBag.SchoolClassRooms)
                                        {
                                            <option value="@item.Id">@item.Description</option>
                                        }
                                    </select>
                                    <span asp-validation-for="SchoolClassRoomId" class="text-danger"></span>
                                </div>
                                <div class="col-md-12 col-sm-12 mt-3">
                                    <label for="">Ano</label>
                                    <select class="form-control form-control-lg pb-3 pt-3" asp-for="EnrollmentYear" id="EnrollmentYear">
                                        <option selected>...</option>
                                        @foreach (var item in ViewBag.EnrollmentYears)
                                        {
                                            <option value="@item">@item</option>
                                        }
                                    </select>
                                    <span asp-validation-for="EnrollmentYear" class="text-danger" id="ValidationEnrollmentYear" style="display:none">O campo Ano de inscrição  é obrigatório.</span>
                                </div>
                            </div>
                        </fieldset>
                    </fieldset>

                    <fieldset class="border p-2">
                        <legend class="w-auto">Ações</legend>


                        <div id="form_Enrollment_btns">
                            <div class="template-demo">
                                <button type="button" class="btn btn-success btn-icon-text" onclick="createEnrollment()">
                                    Matricular
                                </button>
                            </div>
                        </div>
                        <div id="form_Enrollment_spinner">
                            <div class="d-flex justify-content-center">
                                <div class="spinner-border" role="status">
                                    <span class="sr-only">Loading...</span>
                                </div>
                            </div>
                        </div>
                    </fieldset>
                </form>
            </div>
        </div>
    </div>
</div>








<div class="modal fade" id="DeleteStudent">
    <div class="modal-dialog">
        <div class="modal-content">

            <!-- Conteúdo do modal -->
            <div class="modal-header">
                <h4 class="modal-title">Apagar estudante</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>

            <div class="modal-body">
                <!-- Conteúdo do formulário aqui -->

                <fieldset class="border p-2">
                    <legend class="w-auto">Alerta </legend>
                    <div id="validation-summary-enroll-repit" class="alert alert-danger" role="alert" style="display:none">
                        <p><strong id="validation-summary-msg-repit"> </strong></p>
                    </div>
                    <p><b>Alerta de Exclusão de Estudante - Ação Registrada para Auditoria</b></p>

                    @if (user is not null)
                    {
                        <p>Prezado  @user.Email</p>
                    }

                    <p>
                        Esta mensagem serve como um alerta importante sobre a exclusão de um estudante em nosso sistema.
                        Informamos que a ação que predente realizar será registrada para possíveis fins de auditoria de dados.
                    </p>


                    <p><strong>Detalhes da exclusão:</strong></p>
                    <ul>

                        @if (user is not null)
                        {
                            <li>Usuário responsável: @user.Email</li>
                        }

                        <li>Data e Hora da exclusão: @DateTime.Now</li>
                    </ul>

                    <p><strong>Estudante a remover:</strong></p>
                    <ul>
                        <li>Nome do Estudante: @Model.Name</li>
                    </ul>

                    <p>Solicitamos que, por favor, forneça o motivo específico para a exclusão deste estudante. Essa informação é crucial para mantermos um registro adequado e entendermos os motivos por trás da ação realizada.</p>




                </fieldset>

                <fieldset class="border p-2">
                    <legend class="w-auto"> <strong>Motivo da Exclusão: </strong></legend>

                    <div class="form-row">
                        <div class="col-12">
                            <label for=""> Descrição:</label>
                            <textarea class="form-control form-control-lg  " id="deleteDiscription">

                            </textarea>
                        </div>
                    </div>

                </fieldset>
            </div>




            <fieldset class="border p-2">
                <legend class="w-auto">Ações</legend>


                <div id="btnDelete">
                    <div class="template-demo">
                        <button type="button" class="btn btn-danger btn-icon-text" onclick="GotoDeleteBen()">
                            Apagar
                        </button>
                    </div>
                </div>
                <div id="spinnerDelete" style="display:none">
                    <div class="d-flex justify-content-center">
                        <div class="spinner-border" role="status">
                            <span class="sr-only">Loading...</span>
                        </div>
                    </div>
                </div>
            </fieldset>

        </div>
    </div>
</div>

























<div class="modal fade" id="FixEnrollmentRepitModal">
    <div class="modal-dialog">
        <div class="modal-content">

            <!-- Conteúdo do modal -->
            <div class="modal-header">
                <h4 class="modal-title">Formulário de retifiçacão matricula</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>

            <div class="modal-body">
                <!-- Conteúdo do formulário aqui -->

                <fieldset class="border p-2">
                    <legend class="w-auto">Alerta </legend>
                    <div id="validation-summary-enroll-repit" class="alert alert-danger" role="alert" style="display:none">
                        <p><strong id="validation-summary-msg-repit"> </strong></p>
                    </div>
                    <h2>Alerta Importante</h2>
                    <p>Ao prosseguir com a retificação da matrícula, todos os dados associados serão permanentemente apagados do sistema. <br /> Certifique-se da necessidade desta ação antes de continuar.</p>


                </fieldset>

                <fieldset class="border p-2">
                    <legend class="w-auto"> Dados pedagógicos </legend>



                    <div class="form-row">
                        <div class="col-12">
                            <label for="">Matricular a ser retificada </label>
                            <select class="form-control form-control-lg pb-3 pt-3" id="OldEnrollment">

                                @foreach (var item in Model.Enrollments)
                                {
                                    <option value="@item.Id">@item.SchoolLevel.Description  -  @item.EnrollmentYear</option>
                                }
                            </select>
                            <span asp-validation-for="CurrentSchoolLevelId" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="form-row">
                        <div class="col-12">
                            <label for="">Matricular na Classe </label>
                            <select class="form-control form-control-lg pb-3 pt-3" id="NewSchoolLevelId">

                                @foreach (SimpleEntity item in ViewBag.FixCurrentSchoolLevels)
                                {
                                    <option value="@item.Id">@item.Description</option>
                                }
                            </select>
                            <span asp-validation-for="CurrentSchoolLevelId" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="col-12">
                            <label for="">Turma / Grupo</label>
                            <select class="form-control form-control-lg pb-3 pt-3" id="NewSchoolClassRoomId">

                                @foreach (SimpleEntity item in ViewBag.SchoolClassRooms)
                                {
                                    <option value="@item.Id">@item.Description</option>
                                }
                            </select>
                            <span asp-validation-for="SchoolClassRoomId" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="col-12">
                            <label for="">Ano</label>
                            <select class="form-control form-control-lg pb-3 pt-3" id="NewEnrollmentYear">

                                @foreach (var item in ViewBag.FixEnrollmentYears)
                                {
                                    <option value="@item">@item</option>
                                }
                            </select>
                            <span asp-validation-for="EnrollmentYear" class="text-danger " style="display:none">O campo Ano de inscrição  é obrigatório.</span>
                        </div>
                    </div>

                    <div class="row form-inline mt-4 mb-4">

                        <label for="chkInternal" class="mr-2 ml-4">É aluno interno?</label>
                        <input type="checkbox" class="form-control" id="NewchkInternal" />

                    </div>



                </fieldset>
            </div>




            <fieldset class="border p-2">
                <legend class="w-auto">Ações</legend>


                <div id="fix_EnrollmentRepit_btns_repit">
                    <div class="template-demo">
                        <button type="button" class="btn btn-danger btn-icon-text" onclick="fixEnrollmentRepit()">
                            Mudificar
                        </button>
                    </div>
                </div>
                <div id="fix_EnrollmentRepit_spinner_repit" style="display:none">
                    <div class="d-flex justify-content-center">
                        <div class="spinner-border" role="status">
                            <span class="sr-only">Loading...</span>
                        </div>
                    </div>
                </div>
            </fieldset>

        </div>
    </div>
</div>

<!-- Seu modal -->
<div class="modal fade" id="EnrollmentRepitModal">
    <div class="modal-dialog">
        <div class="modal-content">

            <!-- Conteúdo do modal -->
            <div class="modal-header">
                <h4 class="modal-title">Formulário de matricula  (para repetentes)</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>

            <div class="modal-body">
                <!-- Conteúdo do formulário aqui -->
                <form id="meuFormulario">
                    <fieldset class="border p-2">
                        <legend class="w-auto">Dados pedagógicos </legend>
                        <div id="validation-summary-enroll-repit" class="alert alert-danger" role="alert" style="display:none">
                            <p><strong id="validation-summary-msg-repit"> </strong></p>
                        </div>
                        <fieldset class="border p-2">
                            <legend class="w-auto">Matricula actual (@ViewBag.CurrentSchoolLevel) </legend>
                            <div class="form-row mb-3">
                                <div class="col-md-12 col-sm-12">
                                    <div class="alert alert-danger" role="alert">
                                        <h3><center>Voltar a matricular na @ViewBag.CurrentSchoolLevel</center> </h3>
                                    </div>

                                </div>
                                <div class="col-md-12 col-sm-12 ">
                                    <label for="">Turma / Grupo</label>
                                    <select class="form-control form-control-lg pb-3 pt-3" asp-for="SchoolClassRoomId" id="SchoolClassRoomIdRepit">
                                        <option selected>...</option>
                                        @foreach (SimpleEntity item in ViewBag.SchoolClassRooms)
                                        {
                                            <option value="@item.Id">@item.Description</option>
                                        }
                                    </select>
                                    <span asp-validation-for="SchoolClassRoomId" class="text-danger"></span>
                                </div>
                                <div class="col-md-12 col-sm-12 mt-3">
                                    <label for="">Ano</label>
                                    <select class="form-control form-control-lg pb-3 pt-3" asp-for="EnrollmentYear" id="EnrollmentYearRepit">
                                        <option selected>...</option>
                                        @foreach (var item in ViewBag.EnrollmentYears)
                                        {
                                            <option value="@item">@item</option>
                                        }
                                    </select>
                                    <span asp-validation-for="EnrollmentYear" class="text-danger" id="ValidationEnrollmentYearRepit" style="display:none">O campo Ano de inscrição  é obrigatório.</span>
                                </div>
                            </div>
                        </fieldset>
                    </fieldset>

                    <fieldset class="border p-2">
                        <legend class="w-auto">Ações</legend>


                        <div id="form_EnrollmentRepit_btns_repit">
                            <div class="template-demo">
                                <button type="button" class="btn btn-danger btn-icon-text" onclick="createEnrollmentRepit()">
                                    Matricular
                                </button>
                            </div>
                        </div>
                        <div id="form_EnrollmentRepit_spinner_repit">
                            <div class="d-flex justify-content-center">
                                <div class="spinner-border" role="status">
                                    <span class="sr-only">Loading...</span>
                                </div>
                            </div>
                        </div>
                    </fieldset>
                </form>
            </div>
        </div>
    </div>
</div>



<div class="modal fade" id="MaterialModal">
    <div class="modal-dialog w-50" style="width:50%">
        <div class="modal-content">

            <!-- Conteúdo do modal -->
            <div class="modal-header">
                <h4 class="modal-title">Material escolar</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>

            <div class="modal-body mb-0">
                <!-- Conteúdo do formulário aqui -->
                <!-- dados do estudante -->
                <fieldset class="border pt-0 mt-0 p-2 pb-0">
                    <legend class="w-auto p-0 m-0 "> Material escolar </legend>
                    <div class="table-responsive  p-0 m-0">
                        <table class="MytabelaItens  p-0 m-0" id="MyMaterialtabelaItens" border="1">
                            <thead>
                                <tr>
                                    <th><center> Material </center></th>
                                    <th><center> Quantidade </center></th>
                                    <th><center></center></th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>
                                        <center>
                                            <select class="select-control" style="width: 100%;" id="SchoolLevels">
                                                <option selected>... selecione ...</option>
                                                @foreach (ProductDropDownDTO item in Model.SalesProduct.Products)
                                                {
                                                    var productJson = Newtonsoft.Json.JsonConvert.SerializeObject(item);
                                                    <option value="@productJson">@item.Description @item.Price MT</option>
                                                }
                                            </select>
                                            <span asp-validation-for="@Model.SalesProduct.Products" class="text-danger"></span>
                                        </center>
                                    </td>
                                    <td><input type="number" style="width: 100%;" id="quantityInput" /></td>
                                    <td>
                                        <center>
                                            <a id="btnAdicionar" class="btn mt-0 btn-sm btn-success btn-icon-text">
                                                Adicionar
                                            </a>
                                        </center>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <div class="table-responsive p-0 m-0">
                        <table class="MytabelaItens p-0 m-0" id="itens" border="1">
                            <thead>
                                <tr>
                                    <th><center> Descrição </center></th>
                                    <th><center> Preço </center></th>
                                    <th><center> Quantidade </center></th>
                                    <th><center> Total </center></th>
                                    <th><center></center></th>
                                </tr>
                            </thead>
                            <tbody>
                                <!-- Display items here dynamically using JavaScript -->
                            </tbody>
                        </table>
                    </div>
                </fieldset>
                <fieldset class="border p-2">
                    <legend class="w-auto">Ações</legend>

                   
                    <div id="btn_Comprar">
                        <a class="btn btn-sm btn-success btn-icon-text text-white" id="comprarBtn">
                            Comprar
                        </a>
                    </div>
                    <div id="spinner_Comprar" style="display:none">
                        <div class="d-flex justify-content-center">
                            <div class="spinner-border" role="status">
                                <span class="sr-only">Loading...</span>
                            </div>
                        </div>
                    </div>
                </fieldset>

            </div>
        </div>
    </div>
</div>












<div class="modal fade" id="SuspendedModal">
    <div class="modal-dialog">
        <div class="modal-content">

            <!-- Conteúdo do modal -->
            <div class="modal-header">
                <h4 class="modal-title">Alerta</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>

            <div class="modal-body mb-0">
                <!-- Conteúdo do formulário aqui -->

                <fieldset class="border p-2 mb-0">
                    <legend class="w-auto">Informação pedagógica </legend>

                    <div class="form-row mb-0">
                        <div class="col-md-12 col-sm-12">
                            <div class="alert alert-danger mb-0" role="alert">
                                <h3><center><b>Estudante suspenso:</b> </center> </h3>
                                <p> Não é possivel matricular o estudante pois encontra-se suspenso.   </p>

                                <p>
                                    Os pagamentos das mensalidades devem ser feitos antecipadamente no
                                    início de cada mês, do dia 1 ao dia 15. A partir do dia 16 até o dia 25,
                                    haverá uma multa de 300 meticais. Após o dia 25, o aluno será suspenso.
                                </p>
                            </div>

                        </div>
                    </div>
                </fieldset>

            </div>
        </div>
    </div>
</div>



<!-- Seu modal -->
<div class="modal fade" id="meuFeeModal">
    <div class="modal-dialog">
        <div class="modal-content">

            <!-- Conteúdo do modal -->
            <div class="modal-header">
                <h4 class="modal-title">Formulário de pagamento de multas</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>

            <div class="modal-body">
                <!-- Conteúdo do formulário aqui -->
                <form id="meuFormulario">
                    <fieldset class="border p-2">
                        <legend class="w-auto">Multas a pagar (@ViewBag.CurrentSchoolLevel) </legend>
                        <div class="form-row mb-3">
                            <div class="col-md-12 col-sm-12">
                                <label for="">Meses</label>
                                <select class="form-control form-control-lg pb-3 pt-3" id="tuitionFeePayment">
                                    @foreach (TuitionFine item in ViewBag.TuitionsFee)
                                    {
                                        <option value="@item.Id">@item.Tuition.MonthNumber - @item.Tuition.MonthName - @item.Tuition.Year</option>
                                    }
                                </select>
                            </div>
                        </div>
                    </fieldset>
                    <fieldset class="border p-2">
                        <legend class="w-auto">Ações</legend>


                        <div id="form_payfee_btns">
                            <div class="template-demo">
                                <button type="button" class="btn btn-success btn-icon-text" onclick="createFeePayment()">
                                    Efectuar pagamento
                                </button>
                            </div>
                        </div>
                        <div id="form_payfee_spinner">
                            <div class="d-flex justify-content-center">
                                <div class="spinner-border" role="status">
                                    <span class="sr-only">Loading...</span>
                                </div>
                            </div>
                        </div>
                    </fieldset>
                </form>
            </div>

        </div>
    </div>
</div>






@section scripts {
    <script src="https://cdn.skypack.dev/pdf-lib/core"></script>
    <!-- Add the following script at the end of your HTML file -->
    <script>
        $(document).ready(function () {
            // Event listener for the "Adicionar" button
            $("#btnAdicionar").on("click", function () {
                // Get the selected product, quantity, and product ID
                var selectedProduct = $("#SchoolLevels option:selected").text();
                var quantity = $("#quantityInput").val();
                var productId = JSON.parse($("#SchoolLevels").val()).Id;

                // Add a new row to the "itens" table with the selected data
                $("#itens tbody").append("<tr>" +
                    "<td><center>" + selectedProduct + "</center></td>" +
                    "<td><center>" + JSON.parse($("#SchoolLevels").val()).Price + " MT</center></td>" +
                    "<td><center>" + quantity + "</center></td>" +
                    "<td><center>" + (JSON.parse($("#SchoolLevels").val()).Price * quantity) + " MT</center></td>" +
                    "<td><center><a class='btn btn-sm btn-danger btn-icon-text' onclick='removeItem(this)'>Remover</a></center></td>" +
                    "<input type='hidden' name='products' value='" + productId + "' />" +
                    "<input type='hidden' name='quantities' value='" + quantity + "' />" +
                    "</tr>");

                // Clear the input fields
                $("#SchoolLevels").val("... selecione ...");
                $("#quantityInput").val("");
            });

            // Event listener for the "Comprar" button
            $("#comprarBtn").on("click", function () {
                // Gather data from the "itens" table


                $("#btn_Comprar").hide();
                $("#spinner_Comprar").show();
            


                var products = [];
                var quantities = [];

                $("#itens tbody tr").each(function () {
                    var productId = $(this).find("input[name='products']").val();
                    var quantity = $(this).find("input[name='quantities']").val();

                    products.push({ studentId: '@Model.id', product: productId, quantity: quantity });
                });

                // Now you have an array of objects with product IDs and quantities
                console.log(products);


                // Send data to the controller via AJAX
                $.ajax({
                    type: "POST",
                    url: "/Sales/Sell",
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify(products),
                    success: function (result) {
                        alert("Compra efetuada com sucesso!"); 
                        // Fechar o modal
                        getProducts(@Model.id);
                        $("#MaterialModal").modal("hide");


                        $("#btn_Comprar").show();
                        $("#spinner_Comprar").hide();
                         
                    },
                    error: function (error) {
                        // Handle the error response
                        console.log(error);

                        $("#btn_Comprar").show();
                        $("#spinner_Comprar").hide();

                    }
                });
            });
        });

        // Function to remove a row from the "itens" table
        function removeItem(element) {
            $(element).closest("tr").remove();
        }
    </script>

    <script>
        $(document).ready(function () {
            $("#provinces").change(function () {
                var ProvincesId = $("#provinces").val();
                $.ajax({
                    url: '/admin/GetDistricts',
                    type: 'GET',
                    data: { Id: ProvincesId },
                    success: function (districts) {
                        $("#district").empty();
                        $.each(districts, function (index, result) {
                            $("#district").append($('<option>', {
                                value: result.id,
                                text: result.description
                            }));
                        });
                    }
                });
            });
        });

        $(document).ready(function () {
            // Verifique se a mensagem está definida
            var mensagem = '@ViewBag.Mensagem';
            if (mensagem) {
                // Exiba a mensagem
                $("#msg-summary").css("display", "block");

                // Remova a mensagem após 5 segundos
                setTimeout(function () {
                    $("#msg-summary").css("display", "none");
                }, 3000);
            }
        });

        $(document).ready(function () {
            getPayments(@Model.id, @Model.Enrollments[0].EnrollmentYear);
            getTuitions(@Model.id, @Model.Enrollments[0].EnrollmentYear);
        });

        function GetDataByEnrollmentYear(EnrollmentYear) {
            getPayments(@Model.id, EnrollmentYear);
            getTuitions(@Model.id, EnrollmentYear);
        }

        function form_pay_btns() {
            $("#form_pay_btns").show();
            $("#form_pay_spinner").hide();
        }

        function form_payfee_btns() {

            $("#form_payfee_btns").show();
            $("#form_payfee_spinner").hide();
        }
        function form_Enrollment_btns() {

            $("#form_Enrollment_btns").show();
            $("#form_Enrollment_spinner").hide();
        }

        function form_EnrollmentRepit_btns() {

            $("#form_EnrollmentRepit_btns_repit").show();
            $("#form_EnrollmentRepit_spinner_repit").hide();
        }

        function form_FixEnrollmentRepit_btns() {

            $("#form_EnrollmentRepit_btns_repit").show();
            $("#form_EnrollmentRepit_spinner_repit").hide();
        }


        function DonloadEnrollmentInvoice(id) {

            $('#enrolls_btns').hide();
            $('#enrolls_spinner').show();

            $.ajax({
                type: "GET",
                url: "/Document/EnrollmentInvoice?id=" + id,
                xhrFields: {
                    responseType: 'blob' // Configuração para tratar a resposta como um blob
                },
                success: function (data) {
                    var blob = new Blob([data], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });
                    var link = document.createElement('a');
                    link.href = window.URL.createObjectURL(blob);
                    link.download = 'Recibo.xlsx';
                    document.body.appendChild(link);
                    link.click();
                    document.body.removeChild(link);

                    $('#enrolls_btns').show();
                    $('#enrolls_spinner').hide();
                },
                error: function (error) {
                    console.error('Erro ao baixar o relatório:', error);

                    $('#enrolls_btns').show();
                    $('#enrolls_spinner').hide();
                }
            });
        }


        function DonloadTuitionInvoice(id) {

            $('#enrolls_btns').hide();
            $('#enrolls_spinner').show();

            $.ajax({
                type: "GET",
                url: "/Document/TuitionInvoice?id=" + id,
                xhrFields: {
                    responseType: 'blob' // Configuração para tratar a resposta como um blob
                },
                success: function (data) {
                    var blob = new Blob([data], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });
                    var link = document.createElement('a');
                    link.href = window.URL.createObjectURL(blob);
                    link.download = 'Recibo.xlsx';
                    document.body.appendChild(link);
                    link.click();
                    document.body.removeChild(link);

                    $('#enrolls_btns').show();
                    $('#enrolls_spinner').hide();
                },
                error: function (error) {
                    console.error('Erro ao baixar o relatório:', error);

                    $('#enrolls_btns').show();
                    $('#enrolls_spinner').hide();
                }
            });
        }




        function PrintEnrollmentInvoice(id) {

            $('#enrolls_btns').hide();
            $('#enrolls_spinner').show();

            $.ajax({
                type: "GET",
                url: "/Document/EnrollmentInvoicePDF?id=" + id,
                dataType: 'json',
                success: function (data) {

                    displayHtmlForPrinting(data.htmlContent);


                    $('#enrolls_btns').show();
                    $('#enrolls_spinner').hide();
                },
                error: function (error) {
                    console.error('Erro ao baixar o relatório:', error);

                    $('#enrolls_btns').show();
                    $('#enrolls_spinner').hide();
                }
            });
        }



        function PrintTuitionInvoice(id) {

            $('#enrolls_btns').hide();
            $('#enrolls_spinner').show();

            $.ajax({
                type: "GET",
                url: "/Document/TuitionInvoicePDF?id=" + id,
                dataType: 'json',
                success: function (data) {

                    displayHtmlForPrinting(data.htmlContent);


                    $('#enrolls_btns').show();
                    $('#enrolls_spinner').hide();
                },
                error: function (error) {
                    console.error('Erro ao baixar o relatório:', error);

                    $('#enrolls_btns').show();
                    $('#enrolls_spinner').hide();
                }
            });
        }

        function displayHtmlForPrinting(htmlContent) {


            // Abre uma nova janela com o conteúdo HTML
            var printWindow = window.open('', '_blank');
            printWindow.document.write(htmlContent);
            printWindow.document.close();

            // Aguarda o carregamento da janela antes de acionar a impressão
            printWindow.onload = function () {
                printWindow.print();
                printWindow.onafterprint = function () {
                    // Fecha a janela após a impressão
                    printWindow.close();
                };
            };
        }

        function createPayment() {
            if ($("#SinglePaymentDate").val() == null || $("#SinglePaymentDate").val() == "") {
                alert("Data de pagamento invalida!");
                return;
            }
            var data = {
                StudantId: @Model.id,
                TuitionId: $("#tuitionPayment").val(),
                PaymentDate: $("#SinglePaymentDate").val()
            };

            $("#form_pay_btns").hide();
            $("#form_pay_spinner").show();
            $.ajax({
                url: "/tuition/CreatePayment",
                type: "POST",
                data: data,
                success: function (result) {
                    // Lógica após o envio bem-sucedido, se necessário
                    // Por exemplo, fechar o modal ou atualizar a página
                    getPayments(@Model.id, @Model.Enrollments[0].EnrollmentYear);
                    getTuitions(@Model.id, @Model.Enrollments[0].EnrollmentYear);

                    $("#form_pay_btns").show();
                    $("#form_pay_spinner").hide();
                    $('#meuModal').modal('hide');
                }
            });
        }

        function createFeePayment() {

            var data = {
                StudantId: @Model.id,
                TuitionFeeId: $("#tuitionFeePayment").val()
            };
            $("#form_payfee_btns").hide();
            $("#form_payfee_spinner").show();
            $.ajax({
                url: "/tuition/CreateFeePayment",
                type: "POST",
                data: data,
                success: function (result) {
                    getTuitionFines(@Model.id);
                    $("#form_payfee_btns").show();
                    $("#form_payfee_spinner").hide();
                    $('#meuFeeModal').modal('hide');

                }
            });




        }

        function GotoDeleteBen() {

            var reasonDescription = $("#deleteDiscription").val();

            if (!reasonDescription || reasonDescription.trim() === "" || reasonDescription === null) {
                alert("A descrição do Motivo da Exclusão é obrigatória.")
                return;
            }

            var confirmacao = confirm("Tem certeza de que deseja prosseguir com a exclusão da estudante?");

            if (confirmacao) {

                var data = {
                    studantId: @Model.id,
                    reason: $("#deleteDiscription").val(),
                };


                $("#btnDelete").hide();
                $("#spinnerDelete").show();

                $.ajax({
                    url: "/Studant/delete",
                    type: "POST",
                    data: data,
                    success: function (result) {

                        alert("Exclusão feita com sucesso !")
                        window.location.href = "/Studant/Index";
                    },
                    error: function (error) {

                        alert('Erro ao excluir estudante: ' + error)

                        $("#btnDelete").show();
                        $("#spinnerDelete").hide();

                    }
                });

            } else {

                $('#DeleteStudent').modal('hide');

            }
        }

        function fixEnrollmentRepit() {



            var confirmacao = confirm("Tem certeza de que deseja prosseguir com a retificação da matrícula?");

            if (confirmacao) {

                var data = {
                    StudantId: @Model.id,
                    OldEnrollment: $("#OldEnrollment").val(),
                    NewSchoolLevelId: $("#NewSchoolLevelId").val(),
                    NewSchoolClassRoomId: $("#NewSchoolClassRoomId").val(),
                    NewEnrollmentYear: $("#NewEnrollmentYear").val(),
                    NewchkInternal: $("#NewchkInternal").prop("checked"),

                };


                $("#fix_EnrollmentRepit_btns_repit").hide();
                $("#fix_EnrollmentRepit_spinner_repit").show();


                $.ajax({
                    url: "/Enrollment/Fix",
                    type: "POST",
                    data: data,
                    success: function (result) {

                        $("#fix_EnrollmentRepit_btns_repit").show();
                        $("#fix_EnrollmentRepit_spinner_repit").hide();
                        alert("Alteração da inscrição feita com sucesso !")
                        $('#FixEnrollmentRepitModal').modal('hide');
                        location.reload();
                    },
                    error: function (error) {
                        console.error('Erro ao Retificar a matricula:', error);

                        $("#fix_EnrollmentRepit_btns_repit").show();
                        $("#fix_EnrollmentRepit_spinner_repit").hide();
                        $('#FixEnrollmentRepitModal').modal('hide');
                    }
                });

            }
            else {


                $('#FixEnrollmentRepitModal').modal('hide');

            }

        }

        function createEnrollmentRepit() {
            var data = {
                StudantId: @Model.id,
                SchoolLevelId: @Model.CurrentSchoolLevelId,
                SchoolClassRoomId: $("#SchoolClassRoomIdRepit").val(),
                EnrollmentYear: $("#EnrollmentYearRepit").val()
            };


            if (data.EnrollmentYear === "...") {
                $("#ValidationEnrollmentYearRepit").show();
            }
            else {
                $("#ValidationEnrollmentYearRepit").hide();

                $("#form_EnrollmentRepit_btns_repit").hide();
                $("#form_EnrollmentRepit_spinner_repit").show();

                $.ajax({
                    url: "/Enrollment/CreateRepit",
                    type: "POST",
                    data: data,
                    success: function (result) {



                        if (result === "CheckIfHaveEnrollmentIntheYear") {

                            $("#validation-summary-enroll-repit").show();
                            $("#validation-summary-msg-repit").text("Estudante já tem uma matricula para o ano " + data.EnrollmentYear);

                            setTimeout(function () {
                                $("#validation-summary-enroll-repit").hide();
                            }, 5000);

                        } else {
                            window.location = window.location;
                        }

                        $("#form_EnrollmentRepit_btns_repit").show();
                        $("#form_EnrollmentRepit_spinner_repit").hide();
                    }
                });
            }
        }

        function createEnrollment() {

            var data = {
                StudantId: @Model.id,
                SchoolLevelId: $("#NextSchoolLevelId").val(),
                SchoolClassRoomId: $("#SchoolClassRoomId").val(),
                EnrollmentYear: $("#EnrollmentYear").val()
            };

            if (data.EnrollmentYear === "...") {
                $("#ValidationEnrollmentYear").show();
            }
            else {
                $("#ValidationEnrollmentYear").hide();

                $("#form_Enrollment_btns").hide();
                $("#form_Enrollment_spinner").show();

                $.ajax({
                    url: "/Enrollment/Create",
                    type: "POST",
                    data: data,
                    success: function (result) {



                        if (result === "CheckIfHaveEnrollmentIntheYear") {

                            $("#validation-summary-enroll").show();
                            $("#validation-summary-msg").text("Estudante já tem uma matricula para o ano " + data.EnrollmentYear);

                            setTimeout(function () {
                                $("#validation-summary-enroll").hide();
                            }, 5000);

                        } else {
                            window.location = window.location;
                        }

                    }
                });
            }
        }

        function getTuitions(id, EnrollmentYear) {

            var data = {
                StudantId: @Model.id,
                EnrollmentYear: EnrollmentYear,
            };

            $("#menu_1_spinner").show();
            $("#menu_1_info").hide();
            $.ajax({
                url: "/tuition/IndexByStudantId",
                type: "GET",
                data: data,
                success: function (MyList) {
                    $("#tabelaItens tbody").empty();
                    $('#tuitionPayment').empty();

                    $.each(MyList, function (index, item) {
                        var newRow = $("<tr>");
                        var formattedsDate = new Date(item.startDate).toLocaleDateString('pt-BR');
                        var formattedeDate = new Date(item.endDate).toLocaleDateString('pt-BR');

                        newRow.append("<td>" + item.monthName + "</td>");
                        newRow.append("<td>" + formattedsDate + " a " + formattedeDate + "</td>");

                        if (item.paid) {
                            // Se verdadeiro, adicione a célula com a classe verde
                            newRow.append("<td><label class='badge badge-success mt-0 mb-0'>Pago</label></td>");
                        } else {
                            // Se falso, adicione a célula com a classe vermelha
                            newRow.append("<td><label class='badge badge-danger mt-0 mb-0'>Não Pago</label></td>");
                            $('#tuitionPayment').append('<option value="' + item.id + '">' + item.monthNumber + ' - ' + item.monthName + ' - ' + item.year + '</option>');
                        }
                        // Adapte conforme necessário para refletir a estrutura do seu objeto e adicione mais colunas se necessário
                        $("#tabelaItens tbody").append(newRow);
                    });

                    $("#menu_1_spinner").hide();
                    $("#menu_1_info").show();
                }
            });
        }

        function getTuitionFines(id) {

            $('#menu_2_info').hide();
            $('#menu_2_spinner').show();

            $.ajax({
                url: "/tuition/IndexByStudantIdFines?id=" + id,
                type: "GET",
                success: function (MyList) {
                    $("#tabelaItenFines tbody").empty();
                    $('#tuitionFeePayment').empty();
                    $.each(MyList, function (index, item) {
                        var newRow = $("<tr>");

                        var formattedDate = new Date(item.createdDate).toLocaleDateString('pt-BR');
                        var formattedPaidDate = new Date(item.paidDate).toLocaleDateString('pt-BR');

                        newRow.append("<td>" + item.finesValue + ",00 MT" + "</td>");
                        newRow.append("<td>" + item.tuition.monthNumber + " - " + item.tuition.monthName + " - " + item.tuition.year + "</td>");
                        newRow.append("<td>" + formattedDate + "</td>");

                        if (item.paid) {
                            // Se verdadeiro, adicione a célula com a classe verde
                            newRow.append("<td><label class='badge badge-success mt-0 mb-0'>Pago</label></td>");
                        } else {
                            // Se falso, adicione a célula com a classe vermelha
                            newRow.append("<td><label class='badge badge-danger mt-0 mb-0'>Não Pago</label></td>");
                            $('#tuitionFeePayment').append('<option value="' + item.id + '">' + item.tuition.monthNumber + ' - ' + item.tuition.monthName + ' - ' + item.tuition.year + '</option>');

                        }

                        if (formattedPaidDate === "01/01/1970") {
                            newRow.append("<td>" + "" + "</td>");
                        } else {
                            newRow.append("<td>" + formattedPaidDate + "</td>");
                        }

                        // Adapte conforme necessário para refletir a estrutura do seu objeto e adicione mais colunas se necessário
                        $("#tabelaItenFines tbody").append(newRow);
                    });

                    $('#menu_2_info').show();
                    $('#menu_2_spinner').hide();
                }
            });


        }


        function getEnrollments(id) {

            $('#menu_3_info').hide();
            $('#menu_3_spinner').show();

            $.ajax({
                url: "/admin/GetEnrollmentsByStudentId?id=" + id,
                type: "GET",
                success: function (MyList) {
                    $("#tabelaEnrollments tbody").empty();
                    $('#tuitionFeePayment').empty();

                    $.each(MyList, function (index, item) {
                        var newRow = $("<tr>");

                        var formattedDate = new Date(item.createdDate).toLocaleDateString('pt-BR');
                        newRow.append("<td>" + formattedDate + "</td>");
                        newRow.append("<td>" + item.level + "</td>");
                        newRow.append("<td>" + item.year + "</td>");
                        newRow.append("<td>" + item.items + "</td>");

                        newRow.append("<td>" + item.value + ", MT" + "</td>");
                        newRow.append("<td>" + item.total + ", MT" + "</td>");
                        newRow.append("<td>" + " <div id='enrolls_btns' > <button onclick='PrintEnrollmentInvoice(" + item.id + " )'   type='button'  class='btn btn-sm btn-dark btn-block btn-icon-text text-white  mb-0 mt-0 ' >  Imprimir </button>      </div>   <div id='enrolls_spinner' style='display:none'><div class='d-flex justify-content-center'><div class='spinner-border spinner-border-sm' role='status'><span class='sr-only'>Loading...</span></div></div></div> " + "</td>");

                        $("#tabelaEnrollments tbody").append(newRow);
                    });

                    $('#menu_3_info').show();
                    $('#menu_3_spinner').hide();
                }
            });

        }





        function getProducts(id) {

      
            $.ajax({
                url: "/admin/GetgetProducts?id=" + id,
                type: "GET",
                success: function (MyList) {
                    $("#ProductsTables tbody").empty();

                    console.log("MyList", MyList);

                       $.each(MyList, function (index, item) {
                           var newRow = $("<tr>");
                           
                           newRow.append("<td>" + item.id + "</td>");
                           newRow.append("<td>" + item.date + "</td>");
                           newRow.append("<td>" + item.description + "</td>");
                           newRow.append("<td>" + item.paymentWithVat + "</td>");
                           newRow.append("<td>" + " <div id='enrolls_btns' > <button onclick='PrintProductInvoice(" + item.id + " )'   type='button'  class='btn btn-sm btn-dark btn-block btn-icon-text text-white  mb-0 mt-0 ' >  Imprimir </button>      </div>   <div id='Product_spinner' style='display:none'><div class='d-flex justify-content-center'><div class='spinner-border spinner-border-sm' role='status'><span class='sr-only'>Loading...</span></div></div></div> " + "</td>");
                     
                           $("#ProductsTables tbody").append(newRow);
                       });

                }
            });

        }





        function getMultiPayments(id, EnrollmentYear) {
            var data = {
                StudantId: @Model.id,
                EnrollmentYear: EnrollmentYear,
            };

            $.ajax({
                url: "/tuition/IndexMultiPaymentByStudantId",
                type: "GET",
                data: data,
                success: function (MyList) {


                    $("#PayAllTabelaIten tbody").empty();
                    $.each(MyList, function (index, item) {

                        var newRow = $("<tr>");
                        newRow.data("itemId", item.id);
                        var formattedsDate = new Date(item.startDate).toLocaleDateString('pt-BR');
                        var formattedeDate = new Date(item.endDate).toLocaleDateString('pt-BR');

                        newRow.append("<td>" + item.monthName + "</td>");
                        newRow.append("<td>" + formattedsDate + " a " + formattedeDate + "</td>");
                        newRow.append("<td> <input  onclick='SumMonthToPay(" + item.tuitionValue + " , event)' type='checkbox' /> </td>");

                        $("#PayAllTabelaIten tbody").append(newRow);
                    });

                }
            });
        }
        var TotalToPay = 0;
        function form_multi_pay_btns() {
            TotalToPay = 0;
            $("#TotalPayAllTabelaIten").text("Total a pagar: ");
            getMultiPayments(@Model.id, @Model.Enrollments[0].EnrollmentYear);
        }
        function SumMonthToPay(itemId, event) {

            var checkbox = event.target;
            if (checkbox.checked) {
                // Checkbox is checked
                TotalToPay = TotalToPay + itemId;

            } else {
                // Checkbox is not checked
                TotalToPay = TotalToPay - itemId;

            }

            $("#TotalPayAllTabelaIten").text("Total a pagar: " + TotalToPay + ".00 MT");
        }
        function confirmarMultiPayment() {

            if ($("#MultiPaymentDate").val() == null || $("#MultiPaymentDate").val() == "") {
                alert("Data de pagamento invalida!");
                return;
            }

            $("#btn_multipayments").hide();
            $("#spinner_multipayments").show();

            // Exibir um diálogo de confirmação
            var userConfirmation = confirm("Tem certeza de que deseja prosseguir com o pagamento múltiplo?");
            var selectedIds = [];

            // Verificar a resposta do usuário
            if (userConfirmation) {

                $("#btn_multipayments").hide();
                $("#spinner_multipayments").show();

                // Selector to get the rows of the table where the checkbox is checked
                var selectedRows = $("#PayAllTabelaIten tbody tr:has(:checkbox:checked)");

                // Iterate over the selected rows
                selectedRows.each(function (index, row) {

                    var itemId = $(row).data("itemId");

                    selectedIds.push({
                        StudantId: @Model.id,
                        TuitionId: itemId,
                        PaymentDate: $("#MultiPaymentDate").val(),
                    });


                });


                $.ajax({
                    url: "/Tuition/CreateMultiPayment",
                    type: "POST",
                    contentType: "application/json",
                    data: JSON.stringify(selectedIds),
                    success: function (result) {

                        getPayments(@Model.id, @Model.Enrollments[0].EnrollmentYear);
                        getTuitions(@Model.id, @Model.Enrollments[0].EnrollmentYear);

                        $("#btn_multipayments").show();
                        $("#spinner_multipayments").hide();
                        $('#multipayments').modal('hide');

                    },
                    error: function (error) {
                        console.error('Erro ao baixar o relatório:', error);

                        $("#btn_multipayments").show();
                        $("#spinner_multipayments").hide();
                    }
                });

            } else {


            }
        }




        function getPayments(id, EnrollmentYear) {

            var data = {
                StudantId: @Model.id,
                EnrollmentYear: EnrollmentYear,
            };

            $.ajax({
                url: "/tuition/IndexPaymentByStudantId",
                type: "GET",
                data: data,
                success: function (MyList) {
                    $("#tabelaItensPayments tbody").empty();
                    // Adicione os novos itens à tabela na sua página
                    $.each(MyList, function (index, item) {
                        console.log(MyList);
                        var newRow = $("<tr>");
                        // Formata a data no formato "dd-mm-aaaa"


                        newRow.append("<td>" + item.monthName + "</td>");
                        newRow.append("<td>" + item.paymentDate + "</td>");
                        newRow.append("<td>" + item.paymentWithoutVat + ",00 MT" + "</td>");
                        newRow.append("<td>" + item.vatOfPayment + ",00 MT" + "</td>");
                        newRow.append("<td>" + item.paymentWithVat + ",00 MT" + "</td>");
                        newRow.append("<td>" + " <div id='enrolls_btns' > <button onclick='PrintTuitionInvoice(" + item.id + " )'   type='button'  class='btn btn-sm btn-dark btn-block btn-icon-text text-white  mb-0 mt-0 ' >  Imprimir </button>  </div>   <div id='enrolls_spinner' style='display:none'><div class='d-flex justify-content-center'><div class='spinner-border spinner-border-sm' role='status'><span class='sr-only'>Loading...</span></div></div></div> " + "</td>");



                        // Adapte conforme necessário para refletir a estrutura do seu objeto e adicione mais colunas se necessário

                        $("#tabelaItensPayments tbody").append(newRow);
                    });
                }
            });




        }


    </script>
} 